{"version":3,"file":"static/js/387.eb8f8267.chunk.js","mappings":"kRAEaA,EAAmBC,EAAAA,GAAAA,IAAH,kRAiBhBC,EAAaD,EAAAA,GAAAA,GAAH,kDAIVE,EAAaF,EAAAA,GAAAA,GAAH,gDAIVG,EAAeH,EAAAA,GAAAA,GAAH,sEAKZI,EAAgBJ,EAAAA,GAAAA,EAAH,4D,SCe1B,EApCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAET,GAAE,CAACF,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBJ,GADrB,OACbF,EADa,OAEnBC,EAAWD,GAFQ,2CAAH,qDAIlBK,GACD,GAAE,CAACH,KAGF,SAAC,EAAAK,SAAD,WACE,SAACd,EAAD,UACGO,EAAQQ,OAAS,GAChB,SAACb,EAAD,UACGK,EAAQS,KAAI,SAAAC,GAAM,OACjB,UAACd,EAAD,YACE,UAACC,EAAD,WAAc,WAASa,EAAOC,WAC9B,SAACb,EAAD,UAAgBY,EAAOE,YAFRF,EAAOG,GADP,OAQrB,uBAAG,gDAKZ,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  background-color: #c1fff7;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n\n  h1 {\n    margin-bottom: 20px;\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const ReviewList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const ReviewAuthor = styled.h2`\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 1rem;\n  color: grey;\n`;\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'ApiService/ApiService';\nimport {\n  ReviewsContainer,\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewContent,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const reviews = await fetchMovieReviews(movieId);\n      setReviews(reviews);\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Suspense>\n      <ReviewsContainer>\n        {reviews.length > 0 ? (\n          <ReviewList>\n            {reviews.map(review => (\n              <ReviewItem key={review.id}>\n                <ReviewAuthor>Author: {review.author}</ReviewAuthor>\n                <ReviewContent>{review.content}</ReviewContent>\n              </ReviewItem>\n            ))}\n          </ReviewList>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ReviewsContainer>\n    </Suspense>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","ReviewList","ReviewItem","ReviewAuthor","ReviewContent","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","fetchMovieReviews","Suspense","length","map","review","author","content","id"],"sourceRoot":""}