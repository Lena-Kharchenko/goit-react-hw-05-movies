{"version":3,"file":"static/js/736.43d72aca.chunk.js","mappings":"kQAEaA,EAAgBC,EAAAA,GAAAA,IAAH,6CAIbC,EAAWD,EAAAA,GAAAA,GAAH,iGAORE,EAAWF,EAAAA,GAAAA,GAAH,2NAYRG,EAAYH,EAAAA,GAAAA,IAAH,yDAKTI,EAAWJ,EAAAA,GAAAA,GAAH,qFAMRK,EAAgBL,EAAAA,GAAAA,EAAH,qF,2BCkC1B,EAtDa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBJ,GADrB,OACVF,EADU,OAEhBC,EAAQD,GAFQ,2CAAH,qDAIfK,GALoB,CAMrB,GAAE,CAACH,KAGF,SAAC,EAAAK,SAAD,WACE,SAACf,EAAD,UACGQ,EAAKQ,OAAS,GACb,SAACd,EAAD,UACGM,EAAKS,KAAI,SAAAC,GAAK,OACb,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IACE,yCAAkCD,EAAME,eACxCC,EAEFC,IAAKJ,EAAMK,KACXC,QAAS,SAAAC,GACPA,EAAEC,OAAOP,IA7B3B,uFA8BiB,KAEH,SAACd,EAAD,UAAWa,EAAMK,QACjB,UAACjB,EAAD,WAAe,cAAYY,EAAMS,eAZpBT,EAAMU,GADR,OAkBjB,uBAAG,6CAKZ,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const CastName = styled.h2`\n  margin: 10px 0;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n  color: black;\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  CastImage,\n  CastName,\n  CastCharacter,\n} from './Cast.styled';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'ApiService/ApiService';\n\nconst defaultImage =\n  'https://internetdevels.com/sites/default/files/public/blog_preview/404_page_cover.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      const cast = await fetchMovieCredits(movieId);\n      setCast(cast);\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Suspense>\n      <CastContainer>\n        {cast.length > 0 ? (\n          <CastList>\n            {cast.map(actor => (\n              <CastItem key={actor.id}>\n                <CastImage\n                  src={\n                    `https://image.tmdb.org/t/p/w500${actor.profile_path}` ||\n                    defaultImage\n                  }\n                  alt={actor.name}\n                  onError={e => {\n                    e.target.src = defaultImage;\n                  }}\n                />\n                <CastName>{actor.name}</CastName>\n                <CastCharacter>Character: {actor.character}</CastCharacter>\n              </CastItem>\n            ))}\n          </CastList>\n        ) : (\n          <p>We don't have any cast for this movie</p>\n        )}\n      </CastContainer>\n    </Suspense>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n"],"names":["CastContainer","styled","CastList","CastItem","CastImage","CastName","CastCharacter","useState","cast","setCast","movieId","useParams","useEffect","fetchCast","fetchMovieCredits","Suspense","length","map","actor","src","profile_path","defaultImage","alt","name","onError","e","target","character","id"],"sourceRoot":""}